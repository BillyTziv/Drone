%
% This file is a Quadcopter Simulation for MATLAB
%

% Variables for the quadcopter construction and the enviroment

% Mass of the quadcopter (kg)
mass = 1.4

% Gravitational Constant (m/s^2)
gravity = 9.81

% Vaiables aout the simulation

% Weight vector according to x, y, z axis
% Notice that z axis and gravity have opposite directions thus we need a minus	
weight = [0, 0, -mass*gravity]'

% Acceleration (m/s^2)
acceleration = 0;

% Velocity (ms/s)
velocity = 0;

%Position of the quad in x, y, z axis (m)
position = [0, 0, 0];

% phi psi theta euler angles
% Notice that at first the three angles are zero caz you have parallel CS
phi = 0;
psi = 0;
theta = 0;

% Rotation matrix from CS1 to CS0
R = [cos(phi)*cos(psi)-cos(theta)*sin(phi)*sin(psi), cos(theta)*cos(psi)*sin(phi)+cos(phi)*sin(psi), sin(phi)*sin(theta):-cos(psi)*sin(phi)-cos(phi)*cos(theta)*sin(psi), cos(phi)*cos(theta)*cos(psi)-sin(phi)*sin(psi), cos(phi)*sin(theta):sin(theta)*sin(psi), -cos(psi)*sin(theta), cos(theta)];

% Simulation start and stop time. Will run for `end_time` seconds and
% output the results every dt seconds.
start_time = 0;
end_time = 10;
dt = 0.005;

% Vector with the points of interest
times = start_time:dt:end_time;

% Total number of points in the simulation
N = numel(times);

% Step though the simulatio, updating the state
for t = times
    %Compute linear and angular accelerations
    acceleration = compute_acceleration(t, theta, xdot, m, g, k, kd);
end

